{"version":3,"sources":["Account.ts"],"names":["Account","constructor","data","_data","_registration","AccountRegistration","registration","getId","id","getURI","uri","getName","name","getUsername","username","getDomain","domain","getPassword","password","getProxy","proxy","getTransport","transport","getContactParams","contactParams","getContactUriParams","contactUriParams","getRegServer","regServer","getRegTimeout","regTimeout","getRegContactParams","regContactParams","getRegHeaders","regHeaders","getRegistration"],"mappings":";;;;;;;AAAA;;;;;;AA8Be,MAAMA,OAAN,CAAc;AAK3BC,EAAAA,WAAW,CAACC,IAAD,EAA2B;AAAA;;AAAA;;AACpC,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,aAAL,GAAqB,IAAIC,4BAAJ,CAAwBH,IAAI,CAACI,YAA7B,CAArB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKJ,KAAL,CAAWK,EAAlB;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKN,KAAL,CAAWO,GAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKR,KAAL,CAAWS,IAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,WAAW,GAAG;AACZ,WAAO,KAAKV,KAAL,CAAWW,QAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKZ,KAAL,CAAWa,MAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,WAAW,GAAG;AACZ,WAAO,KAAKd,KAAL,CAAWe,QAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKhB,KAAL,CAAWiB,KAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKlB,KAAL,CAAWmB,SAAlB;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,gBAAgB,GAAG;AACjB,WAAO,KAAKpB,KAAL,CAAWqB,aAAlB;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,mBAAmB,GAAG;AACpB,WAAO,KAAKtB,KAAL,CAAWuB,gBAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKxB,KAAL,CAAWyB,SAAX,IAAwB,EAA/B;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,aAAa,GAAG;AACd,WAAO,KAAK1B,KAAL,CAAW2B,UAAlB;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,mBAAmB,GAAG;AACpB,WAAO,KAAK5B,KAAL,CAAW6B,gBAAlB;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,aAAa,GAAG;AACd,WAAO,KAAK9B,KAAL,CAAW+B,UAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,eAAe,GAAwB;AACrC,WAAO,KAAK/B,aAAZ;AACD;;AAjI0B","sourcesContent":["import AccountRegistration, { AccountRegistrationConstructor } from \"./AccountRegistration\";\n/**\n * This describes account configuration and registration status\n */\n\ninterface RegHeaders {\n  [key: string]: string | number;\n}\n\ninterface AccountData {\n  id: number;\n  uri: string;\n  name: string;\n  username: string;\n  domain: string;\n  password: string;\n  proxy: string;\n  transport: string;\n  contactParams: string;\n  contactUriParams: string;\n  regServer: string;\n  regTimeout: string;\n  regContactParams: string;\n  regHeaders: RegHeaders;\n}\n\nexport interface AccountConstructor extends AccountData {\n  registration: AccountRegistrationConstructor;\n}\n\nexport default class Account {\n  _data: AccountData;\n\n  _registration: AccountRegistration;\n\n  constructor(data: AccountConstructor) {\n    this._data = data;\n    this._registration = new AccountRegistration(data.registration);\n  }\n\n  /**\n   * The account ID.\n   * @returns {int}\n   */\n  getId() {\n    return this._data.id;\n  }\n\n  /**\n   * This is the URL to be put in the request URI for the registration,\n   * and will look something like \"sip:serviceprovider\".\n   * @returns {String}\n   */\n  getURI() {\n    return this._data.uri;\n  }\n\n  /**\n   * Full name specified in Endpoint.createAccount().\n   * @returns {String}\n   */\n  getName() {\n    return this._data.name;\n  }\n\n  /**\n   * Username specified in Endpoint.createAccount().\n   * @returns {String}\n   */\n  getUsername() {\n    return this._data.username;\n  }\n\n  /**\n   * Domain specified in Endpoint.createAccount().\n   * @returns {int|null}\n   */\n  getDomain() {\n    return this._data.domain;\n  }\n\n  /**\n   * Password specified in Endpoint.createAccount().\n   * @returns {String}\n   */\n  getPassword() {\n    return this._data.password;\n  }\n\n  /**\n   * Proxy specified in Endpoint.createAccount().\n   * @returns {String}\n   */\n  getProxy() {\n    return this._data.proxy;\n  }\n\n  /**\n   * Transport specified in Endpoint.createAccount().\n   * @returns {String}\n   */\n  getTransport() {\n    return this._data.transport;\n  }\n\n  /**\n   * Additional parameters that will be appended in the Contact header\n   * for this account.\n   * @returns {String}\n   */\n  getContactParams() {\n    return this._data.contactParams;\n  }\n\n  /**\n   * Additional URI parameters that will be appended in the Contact URI\n   * for this account.\n   * @returns {String}\n   */\n  getContactUriParams() {\n    return this._data.contactUriParams;\n  }\n\n  /**\n   * Port specified in Endpoint.createAccount().\n   * @returns {String}\n   */\n  getRegServer() {\n    return this._data.regServer || \"\";\n  }\n\n  /**\n   * Port specified in Endpoint.createAccount().\n   * @returns {String}\n   */\n  getRegTimeout() {\n    return this._data.regTimeout;\n  }\n\n  /**\n   * @returns {String}\n   */\n  getRegContactParams() {\n    return this._data.regContactParams;\n  }\n\n  /**\n   * @returns {Object}\n   */\n  getRegHeaders() {\n    return this._data.regHeaders;\n  }\n\n  /**\n   * Account registration status.\n   * @returns {AccountRegistration}\n   */\n  getRegistration(): AccountRegistration {\n    return this._registration;\n  }\n}\n"]}